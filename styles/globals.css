@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 0%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 0%;
    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 0%;
    --muted: 0 0% 96%;
    --muted-foreground: 0 0% 45%;
    --accent: 0 0% 96%;
    --accent-foreground: 0 0% 0%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;
    --border: 0 0% 90%;
    --input: 0 0% 90%;
    --ring: 0 0% 0%;
    --radius: 0.3rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, "Apple Color Emoji", Arial,
      sans-serif, "Segoe UI Emoji", "Segoe UI Symbol";
  }
}

@layer base {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: 600;
  }

  h1 {
    @apply text-3xl sm:text-4xl;
  }

  h2 {
    @apply text-2xl sm:text-3xl;
  }

  h3 {
    @apply text-xl sm:text-2xl;
  }
}

@layer components {
  .notion-button {
    @apply bg-secondary hover:bg-accent text-primary font-medium py-1 px-3 rounded transition-colors duration-200;
  }

  .squircles {
    --squircle-size: 36px;
    --line: color-mix(in lch, canvasText, transparent 80%);
    content: "";
    overflow: hidden;
    height: 100%;
    width: 100%;
    position: absolute;
    background: linear-gradient(90deg, var(--line) 1px, transparent 1px var(--squircle-size)) 40% 40% / var(--squircle-size) var(--squircle-size),
                linear-gradient(var(--line) 1px, transparent 1px var(--squircle-size)) 40% 40% / var(--squircle-size) var(--squircle-size);
    -webkit-mask: linear-gradient(-20deg, transparent 40%, #fff);
    mask: linear-gradient(-20deg, transparent 40%, #fff);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -40;
  }

  .inset-0 {
    inset: 0
  }

  .rotate-180 {
    --tw-rotate: 180deg
  }

  .rotate-180,.rotate-\[215deg\] {
      transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
  }
}

